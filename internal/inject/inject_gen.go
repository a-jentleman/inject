/*
 *    Copyright 2025 A Jentleman
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// Code generated by inject generate; DO NOT EDIT.

package inject

const ExportedPkgPath = "github.com/a-jentleman/inject"

// InjectorFunc describes an injector function
type InjectorFunc struct {

	// ImportPath is the import path of the injector function.
	ImportPath string

	// FuncName is the name of the injector function.
	FuncName string

	// ReturnTypes is the number of return values. This does not include the cleanup return value, or error return value, if either exists.
	ReturnTypes int

	// HasCleanup reports whether the injector function has a cleanup return value.
	HasCleanup bool

	// HasError reports whether the injector function has an error return value.
	HasError bool
}

// Injectors is a list of all known injector functions.
var Injectors = []InjectorFunc{
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Value",
		ReturnTypes: 1,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "ValueE",
		ReturnTypes: 1,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "ValueC",
		ReturnTypes: 1,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "ValueCE",
		ReturnTypes: 1,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values2",
		ReturnTypes: 2,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values2E",
		ReturnTypes: 2,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values2C",
		ReturnTypes: 2,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values2CE",
		ReturnTypes: 2,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values3",
		ReturnTypes: 3,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values3E",
		ReturnTypes: 3,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values3C",
		ReturnTypes: 3,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values3CE",
		ReturnTypes: 3,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values4",
		ReturnTypes: 4,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values4E",
		ReturnTypes: 4,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values4C",
		ReturnTypes: 4,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values4CE",
		ReturnTypes: 4,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values5",
		ReturnTypes: 5,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values5E",
		ReturnTypes: 5,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values5C",
		ReturnTypes: 5,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values5CE",
		ReturnTypes: 5,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values6",
		ReturnTypes: 6,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values6E",
		ReturnTypes: 6,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values6C",
		ReturnTypes: 6,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values6CE",
		ReturnTypes: 6,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values7",
		ReturnTypes: 7,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values7E",
		ReturnTypes: 7,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values7C",
		ReturnTypes: 7,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values7CE",
		ReturnTypes: 7,
		HasCleanup:  true,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values8",
		ReturnTypes: 8,
		HasCleanup:  false,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values8E",
		ReturnTypes: 8,
		HasCleanup:  false,
		HasError:    true,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values8C",
		ReturnTypes: 8,
		HasCleanup:  true,
		HasError:    false,
	},
	{
		ImportPath:  ExportedPkgPath,
		FuncName:    "Values8CE",
		ReturnTypes: 8,
		HasCleanup:  true,
		HasError:    true,
	},
}

// InjectorsByName is a map of known injector functions by indexed by their (1) import path and (2) function name.
var InjectorsByName = map[string]map[string]*InjectorFunc{
	ExportedPkgPath: {
		"Value":     &Injectors[0],
		"ValueE":    &Injectors[1],
		"ValueC":    &Injectors[2],
		"ValueCE":   &Injectors[3],
		"Values2":   &Injectors[4],
		"Values2E":  &Injectors[5],
		"Values2C":  &Injectors[6],
		"Values2CE": &Injectors[7],
		"Values3":   &Injectors[8],
		"Values3E":  &Injectors[9],
		"Values3C":  &Injectors[10],
		"Values3CE": &Injectors[11],
		"Values4":   &Injectors[12],
		"Values4E":  &Injectors[13],
		"Values4C":  &Injectors[14],
		"Values4CE": &Injectors[15],
		"Values5":   &Injectors[16],
		"Values5E":  &Injectors[17],
		"Values5C":  &Injectors[18],
		"Values5CE": &Injectors[19],
		"Values6":   &Injectors[20],
		"Values6E":  &Injectors[21],
		"Values6C":  &Injectors[22],
		"Values6CE": &Injectors[23],
		"Values7":   &Injectors[24],
		"Values7E":  &Injectors[25],
		"Values7C":  &Injectors[26],
		"Values7CE": &Injectors[27],
		"Values8":   &Injectors[28],
		"Values8E":  &Injectors[29],
		"Values8C":  &Injectors[30],
		"Values8CE": &Injectors[31],
	},
}
